{"version":3,"sources":["Types/SortType.ts","App.tsx","Helpers/getReorderedGoods.ts","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","changeSortBy","sortBy","setState","changeOrderBy","reset","this","visibleGoods","goods","reverse","sort","a","b","ALPHABET","localeCompare","LENGTH","length","getReorderedGoods","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAAYA,E,4GAAAA,O,eAAAA,I,uBAAAA,I,oBAAAA,M,2BCOCC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASWC,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,aAAe,SAACC,GACd,EAAKC,SAAS,CACZJ,SAAUG,KARhB,EAYEE,cAAgB,WACd,EAAKD,UAAS,SAAAN,GAAK,kCACdA,GADc,IAEjBC,YAAaD,EAAMC,iBAfzB,EAmBEO,MAAQ,WACN,EAAKF,SAAS,CACZJ,SAAUL,EAASM,KACnBF,YAAY,KAtBlB,4CA0BE,WAAU,IAAD,OACP,EAAiCQ,KAAKT,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACZS,ECnDH,SACLC,EADK,GAGJ,IADCT,EACF,EADEA,SAAUD,EACZ,EADYA,WAEZ,GAAIC,IAAaL,EAASM,KACxB,OAAOF,EACH,YAAIU,GAAOC,UACXD,EAGN,IAAMD,EAAe,YAAIC,GACtBE,MAAK,SAACC,EAAGC,GACR,OAAQb,GACN,KAAKL,EAASmB,SACZ,OAAOF,EAAEG,cAAcF,GACzB,KAAKlB,EAASqB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OAEtB,QACE,OAAO,MAIf,OAAOlB,EACHS,EAAaE,UACbF,ED0BmBU,CACnBtB,EACA,CACEI,WACAD,eAIJ,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,WAAYrB,IAAaL,EAASmB,WAGtCQ,QAAS,kBAAM,EAAKpB,aAAaP,EAASmB,WAT5C,iCAcA,wBACEM,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,WAAYrB,IAAaL,EAASqB,SAGtCM,QAAS,kBAAM,EAAKpB,aAAaP,EAASqB,SAT5C,4BAcA,wBACEI,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,YAAatB,IAGjBuB,QAASf,KAAKF,cAThB,sBAcEL,IAAaL,EAASM,MAAQF,IAE9B,wBACEqB,KAAK,SACLD,UAAU,4BACVG,QAASf,KAAKD,MAHhB,sBAUJ,6BACGE,EAAae,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,eAjGnB,GAAyBC,IAAMC,WEvB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f39d18c7.chunk.js","sourcesContent":["export enum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n","import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { SortType } from './Types/SortType';\nimport { getReorderedGoods } from './Helpers/getReorderedGoods';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport class App extends React.Component<any, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  changeSortBy = (sortBy: SortType) => {\n    this.setState({\n      sortType: sortBy,\n    });\n  };\n\n  changeOrderBy = () => {\n    this.setState(state => ({\n      ...state,\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const visibleGoods = getReorderedGoods(\n      goodsFromServer,\n      {\n        sortType,\n        isReversed,\n      },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={() => this.changeSortBy(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={() => this.changeSortBy(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={this.changeOrderBy}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {visibleGoods.map(good => (\n            <li\n              data-cy=\"Good\"\n              key={good}\n            >\n              {good}\n            </li>\n          ))}\n          {/* <li data-cy=\"Good\">Dumplings</li>\n          <li data-cy=\"Good\">Carrot</li>\n          <li data-cy=\"Good\">Eggs</li>\n          <li data-cy=\"Good\">Ice cream</li>\n          <li data-cy=\"Good\">Apple</li>\n          <li data-cy=\"Good\">...</li> */}\n        </ul>\n      </div>\n    );\n  }\n}\n","import { ReorderOptions } from '../Types/ReorderOptions';\nimport { SortType } from '../Types/SortType';\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  if (sortType === SortType.NONE) {\n    return isReversed\n      ? [...goods].reverse()\n      : goods;\n  }\n\n  const visibleGoods = [...goods]\n    .sort((a, b) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return a.localeCompare(b);\n        case SortType.LENGTH:\n          return a.length - b.length;\n\n        default:\n          return 0;\n      }\n    });\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}